#include <bits/stdc++.h>
using namespace std;
int a[10];
int b[10][10];
/** fill()과 memset()
 * fill()과 memset()은 배열을 초기화 할 때 쓰입니다.
 *
 * 📌 fill
 * 모든 값으로 초기화 할 수 있습니다.
 * 0, 1, 100 등 모든 숫자로 초기화가 가능합니다.
 *
 * 📌 memset()
 * -1, 0 으로만 초기화가 가능합니다.
 *
 * memset()을 쓰다보면 0, -1 이외의 값으로 초기화하다 틀리는 경우가 있어
 * fill() 을 추천하지만 memset도 배워두는게 좋습니다.
 * 작은 차이지만 0, -1로 초기화하는 경우 fill보다 memset이 더 빠르기때문에
 * 이 때문에 시간적으로 더 최적화를 시킬 수도 있거든요
 */

/** fill()
 * fill(시작값 - first, 끝값 -last, 초기화하는값 - val)
 *
 * 배열에 들어가는 값을 초기화
 * O(n)의 시간복잡도
 * 모든 값을 기반으로 초기화가 가능하며, [first,last)까지 val로 초기화
 *
 * cf. [은 포함하다라는 수학적기호, )은 포함하지 않는다는 기호입니다.
 * 즉, 시작값은 포함하고, 끝값은 포함하지 않고 초기화한다는 의미
 *
 * fill()로 배열의 모든 값이 아닌 일부값을 초기화하는 경우도 있지만,
 * 보통은 전체를 초기화하는게 좋음
 */
int main() {
  // a[0]부터 시작해 a[9]까지 초기화하고 싶기 때문에
  // a[0], a[10] 이 두개의 인자를 fill() 함수의 인자로
  fill(&a[0], &a[10], 100);
  for (int i = 0; i < 10; i++) {
    cout << a[i] << " ";
  }
  cout << '\n';

  fill(&b[0][0], &b[9][10], 2);
  for (int i = 0; i < 10; i++) {
    for (int j = 0; j < 10; j++) {
      cout << b[i][j] << " ";
    }
    cout << '\n';
  }
  return 0;
}
/*
100 100 100 100 100 100 100 100 100 100
2 2 2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2 2 2
*/